(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{363:function(a,s,t){"use strict";t.r(s);var e=t(5),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"docker-build导致的磁盘空间不足问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-build导致的磁盘空间不足问题"}},[a._v("#")]),a._v(" Docker build导致的磁盘空间不足问题")]),a._v(" "),s("p",[a._v("最近新搭建了一套"),s("code",[a._v("CI/CD")]),a._v("，大体流程上是通过git提交代码到"),s("code",[a._v("gitea")]),a._v("，通过"),s("code",[a._v("gitea")]),a._v("仓库的web钩子来触发"),s("code",[a._v("Jenkins")]),a._v("运行代码打包("),s("code",[a._v("golang")]),a._v(" "),s("code",[a._v("docker")]),a._v(")和发布("),s("code",[a._v("kuboard")]),a._v(" "),s("code",[a._v("k8s")]),a._v(")的脚本。但是在昨天运行的过程中，一直构建失败，报错代码如下:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#12 37.01 # github.com/gin-gonic/gin")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#12 37.01 compile: writing output: write $WORK/b504/_pkg_.a: no space left on device")]),a._v("\n------\nDockerfile:29\n--------------------\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("28")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 编译项目可执行文件，并压缩生成的二进制文件")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("29")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" RUN go build "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ldflags")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-s -w"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-tags")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("jsoniter "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" api/bin/main api/main.go "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" upx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-9")]),a._v(" /builder/api/bin/main\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("31")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("     \n--------------------\nERROR: failed to solve: process "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/bin/sh -c go build -ldflags='),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v("-s -w"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v(' -tags=jsoniter -o api/bin/main api/main.go     && upx -q -9 /builder/api/bin/main"')]),a._v(" did not complete successfully: "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v(" code: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\nBuild step "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Execute shell'")]),a._v(" marked build as failure\nFinished: FAILURE\n")])])]),s("p",[a._v("根据报错信息中的"),s("code",[a._v("no space left on device")]),a._v("我们知道原因是"),s("strong",[a._v("磁盘空间不足")]),a._v("。紧接着，我查看了一下磁盘空间的占用情况。占用情况如下:\n"),s("img",{attrs:{src:"/images/docker-build-df.png",alt:"docker-build-df"}}),a._v("\n通过磁盘占用情况来看是"),s("code",[a._v("docker")]),a._v("挂载的磁盘占用达到105G，99%。问题定位到"),s("code",[a._v("docker")]),a._v("，通过执行"),s("code",[a._v("docker system df")]),a._v("命令来查看"),s("code",[a._v("docker")]),a._v("的磁盘占用情况。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker system df")]),a._v("\nTYPE            TOTAL     ACTIVE    SIZE      RECLAIMABLE\nImages          "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("22")]),a._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(".843GB   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("777")]),a._v(".4MB "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("27")]),a._v("%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nContainers      "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9")]),a._v("         "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v(".281MB   "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1B")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nLocal Volumes   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("36")]),a._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9")]),a._v("         336B      252B "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("75")]),a._v("%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nBuild Cache     "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),a._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("         103GB   103GB\n")])])]),s("p",[a._v("根据docker系统磁盘占用分析可以得出磁盘空间不足主要是103G的docker build生成的缓存信息。通过执行"),s("code",[a._v("docker builder prune")]),a._v("来清理掉缓存信息就好了。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker builder prune")]),a._v("\nWARNING"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" This will remove all dangling build cache. Are you sure you want to continue? "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("y/N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" y\nID                                              RECLAIMABLE     SIZE            LAST ACCESSED\ntkxtvbls98amsvcl8858nlccd*                      "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("            0B              About an hour ago\nsb228tc0ociq2df7a168z4c9r*                      "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("    0B              About an hour ago\nkxo8crv5fbq03wemt0d9khwpb*                      "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(".264MB         About an hour ago\n6yy4h3fs87j76gn4colz0q8f8*                      "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(".332MB         About an hour ago\nrwl1td4rawihkkkwrlbqmriyb*                      "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(".509kB         About an hour ago\ndk3h9iv0evdgynqoxx1516o9c*                      "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(".509kB         About an hour ago\no0mxn2z37ontg9fc7f9iitfav                       "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(".332MB         About an hour ago\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n8ao7d7fpigrgshdsld2u0i34t                       "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(".881MB         About an hour ago\n93bx3h1meta3rdckru15hkuif                       "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("    95B             About an hour ago\nzax420luhzvbm9yam2v5sqo0d                       "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("    0B              About an hour ago\nusqke9r7bycbf0tk66whg1uu1                       "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("    0B              "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" hours ago\ny37oz85zvd0eoj6sh05vprjt0                       "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("    0B              "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" hours ago\nTotal:  103GB\n")])])]),s("p",[a._v("通过上面的问题分析，我们知道了"),s("code",[a._v("docker build")]),a._v("的过程中会产生缓存，同时缓存磁盘占用并不会自己清理。今天我们将带着下面两个问题来学习一下"),s("code",[a._v("docker build")]),a._v("缓存相关的内容。")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("docker")]),a._v("在"),s("code",[a._v("build")]),a._v("的过程中为什么要产生缓存？")]),a._v(" "),s("li",[a._v("该如何合理的清理掉"),s("code",[a._v("docker")]),a._v("缓存？")])]),a._v(" "),s("h2",{attrs:{id:"docker在build的过程中为什么要产生缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker在build的过程中为什么要产生缓存"}},[a._v("#")]),a._v(" "),s("code",[a._v("docker")]),a._v("在"),s("code",[a._v("build")]),a._v("的过程中为什么要产生缓存？")]),a._v(" "),s("p",[a._v("在 Docker 构建过程中，产生缓存是为了优化镜像构建的效率和速度。Docker 构建缓存的机制允许开发人员重复使用先前构建的中间层，从而避免了不必要的重新执行相同步骤，节省时间和网络资源。")]),a._v(" "),s("h3",{attrs:{id:"docker-构建过程概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-构建过程概述"}},[a._v("#")]),a._v(" Docker 构建过程概述")]),a._v(" "),s("p",[a._v("Docker 构建过程是将 Dockerfile 中的指令转化为一个个构建层（Build Layer）。每一个指令都会生成一个构建层，而所有构建层组合在一起，形成一个完整的镜像。构建过程中的每一步都是无状态的，意味着在同一主机上，对相同的 Dockerfile 执行相同的指令应该得到相同的结果。")]),a._v(" "),s("h3",{attrs:{id:"构建缓存的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构建缓存的原理"}},[a._v("#")]),a._v(" 构建缓存的原理")]),a._v(" "),s("p",[a._v("Docker 构建缓存机制的核心思想是在构建过程中缓存中间层，而不是每次都重新执行所有步骤。当 Docker 执行一个构建指令时，它会计算该指令的哈希值，并将其作为构建缓存的标识符。如果 Docker 在后续的构建过程中遇到相同的指令内容（哈希值相同），它将会使用缓存的中间层，而不是重新执行该指令。")]),a._v(" "),s("p",[a._v("这种缓存机制可以显著减少构建过程中的重复操作。在构建过程的后续阶段，只有发生了变化的指令以后的构建层会重新执行，而之前的层会从缓存中获取。")]),a._v(" "),s("h3",{attrs:{id:"为什么需要构建缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要构建缓存"}},[a._v("#")]),a._v(" 为什么需要构建缓存？")]),a._v(" "),s("p",[a._v("构建缓存的优势体现在以下几个方面：")]),a._v(" "),s("h4",{attrs:{id:"提高构建速度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提高构建速度"}},[a._v("#")]),a._v(" 提高构建速度")]),a._v(" "),s("p",[a._v("由于 Docker 构建过程是将每个指令转化为构建层，并将其缓存，因此在后续构建过程中，如果没有发生变化，Docker 只需重新构建发生变化的部分，而之前构建过的部分可以直接使用缓存，从而大幅度提高构建速度。特别是在大型或复杂的镜像构建中，这种优化对于节省构建时间非常重要。")]),a._v(" "),s("h4",{attrs:{id:"节省网络带宽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#节省网络带宽"}},[a._v("#")]),a._v(" 节省网络带宽")]),a._v(" "),s("p",[a._v("构建缓存避免了相同指令的重复下载，节省了网络带宽。对于远程 Docker 守护进程或分布式构建环境，这对于减少镜像传输时间非常有益。")]),a._v(" "),s("h4",{attrs:{id:"减少磁盘占用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#减少磁盘占用"}},[a._v("#")]),a._v(" 减少磁盘占用")]),a._v(" "),s("p",[a._v("Docker 缓存利用已构建的中间层，避免了重复构建相同层的开销。这导致在本地磁盘上存储的镜像和中间层数量较少，减少了磁盘占用。")]),a._v(" "),s("h3",{attrs:{id:"构建缓存的使用注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构建缓存的使用注意事项"}},[a._v("#")]),a._v(" 构建缓存的使用注意事项")]),a._v(" "),s("p",[a._v("虽然构建缓存在大多数情况下是有益的，但也有一些情况需要注意：")]),a._v(" "),s("h4",{attrs:{id:"缓存失效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存失效"}},[a._v("#")]),a._v(" 缓存失效")]),a._v(" "),s("p",[a._v("构建缓存是根据指令内容的哈希值来判断是否可以使用缓存。如果在 Dockerfile 中的某一步骤后续发生了变化，会导致该步骤以及之后的构建层缓存失效，需要重新构建。因此，在修改 Dockerfile 时，要谨慎处理那些影响缓存的指令。")]),a._v(" "),s("h4",{attrs:{id:"使用-dockerignore-文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-dockerignore-文件"}},[a._v("#")]),a._v(" 使用 .dockerignore 文件")]),a._v(" "),s("p",[a._v("在构建镜像时，Docker 使用构建上下文中的文件作为缓存判断的一部分。因此，确保构建上下文中只包含必要的文件，并使用 .dockerignore 文件排除不必要的文件，以避免不必要的缓存失效。")]),a._v(" "),s("h2",{attrs:{id:"该如何合理的清理掉docker缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#该如何合理的清理掉docker缓存"}},[a._v("#")]),a._v(" 该如何合理的清理掉"),s("code",[a._v("docker")]),a._v("缓存？")]),a._v(" "),s("h3",{attrs:{id:"查询-docker-缓存使用情况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询-docker-缓存使用情况"}},[a._v("#")]),a._v(" 查询 Docker 缓存使用情况")]),a._v(" "),s("p",[a._v("首先，我们需要了解 Docker 缓存的使用情况。运行以下命令可以查看 Docker 系统的磁盘使用情况，包括缓存的大小：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker system df")]),a._v("\nTYPE            TOTAL     ACTIVE    SIZE      RECLAIMABLE\nImages          "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("22")]),a._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(".843GB   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("777")]),a._v(".4MB "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("27")]),a._v("%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nContainers      "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9")]),a._v("         "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v(".281MB   "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1B")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nLocal Volumes   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("36")]),a._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9")]),a._v("         336B      252B "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("75")]),a._v("%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nBuild Cache     "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("12")]),a._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("         0B        0B\n")])])]),s("p",[a._v("通过此命令，您将获得 Docker 系统的磁盘使用摘要，包括镜像、容器、数据卷和构建缓存的大小。")]),a._v(" "),s("h3",{attrs:{id:"清理不再使用的镜像和容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#清理不再使用的镜像和容器"}},[a._v("#")]),a._v(" 清理不再使用的镜像和容器")]),a._v(" "),s("p",[a._v("在优化 Docker 缓存之前，先确保您已清理不再使用的镜像和容器，以释放一些磁盘空间。运行以下命令来列出所有本地的 Docker 镜像和已停止的容器，并删除不再需要的镜像和容器：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列出所有镜像")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" images "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列出所有容器（包括已停止的）")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除不再使用的镜像")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("IMAGE_ID"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除不再使用的容器")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("CONTAINER_ID"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("h3",{attrs:{id:"使用-dockerignore-文件优化构建缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-dockerignore-文件优化构建缓存"}},[a._v("#")]),a._v(" 使用 .dockerignore 文件优化构建缓存")]),a._v(" "),s("p",[s("code",[a._v(".dockerignore")]),a._v(" 文件用于排除不必要的文件和目录，以减少构建上下文中的数据量，从而优化构建缓存的使用。请确保 .dockerignore 文件包含不需要的构建排除项，以减少构建上下文中不必要的文件和目录。")]),a._v(" "),s("h3",{attrs:{id:"使用-no-cache-标志禁用缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-no-cache-标志禁用缓存"}},[a._v("#")]),a._v(" 使用 "),s("code",[a._v("--no-cache")]),a._v(" 标志禁用缓存")]),a._v(" "),s("p",[a._v("如果您希望完全禁用构建缓存并强制 Docker 重新执行所有构建步骤，可以使用 --no-cache 标志。但请注意，这样可能会导致构建速度显著降低，特别是在构建大型镜像时。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" build --no-cache "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("IMAGE_NAME"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("DOCKERFILE_PATH"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("h3",{attrs:{id:"定期清理构建缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定期清理构建缓存"}},[a._v("#")]),a._v(" 定期清理构建缓存")]),a._v(" "),s("p",[a._v("如果您发现构建缓存占用了过多的磁盘空间，可以定期进行清理。使用以下命令来清理未使用的构建缓存：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" builder prune\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);