(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{327:function(s,t,a){"use strict";a.r(t);var e=a(5),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"centos安装k8s"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#centos安装k8s"}},[s._v("#")]),s._v(" Centos安装k8s")]),s._v(" "),t("h3",{attrs:{id:"准备开始"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#准备开始"}},[s._v("#")]),s._v(" 准备开始")]),s._v(" "),t("ol",[t("li",[s._v("一台兼容的 Linux 主机。Kubernetes 项目为基于 Debian 和 Red Hat 的 Linux 发行版以及一些不提供包管理器的发行版提供通用的指令")]),s._v(" "),t("li",[s._v("每台机器 2 GB 或更多的 RAM （如果少于这个数字将会影响你应用的运行内存)2 CPU 核或更多")]),s._v(" "),t("li",[s._v("集群中的所有机器的网络彼此均能相互连接(公网和内网都可以)")]),s._v(" "),t("li",[s._v("节点之中不可以有重复的主机名、MAC 地址或 product_uuid。请参见这里了解更多详细信息。")]),s._v(" "),t("li",[s._v("开启机器上的某些端口。请参见这里 了解更多详细信息。")]),s._v(" "),t("li",[s._v("禁用交换分区。为了保证 kubelet 正常工作，你 必须 禁用交换分区。")])]),s._v(" "),t("h3",{attrs:{id:"确保每个节点上mac地址和product-uuid的唯一性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#确保每个节点上mac地址和product-uuid的唯一性"}},[s._v("#")]),s._v(" 确保每个节点上MAC地址和product_uuid的唯一性")]),s._v(" "),t("ol",[t("li",[s._v("你可以使用命令 ip link 或 ifconfig -a 来获取网络接口的 MAC 地址")]),s._v(" "),t("li",[s._v("可以使用 sudo cat /sys/class/dmi/id/product_uuid 命令对 product_uuid 校验")])]),s._v(" "),t("h3",{attrs:{id:"检测网络适配器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#检测网络适配器"}},[s._v("#")]),s._v(" 检测网络适配器")]),s._v(" "),t("p",[s._v("如果你有一个以上的网络适配器，同时你的 Kubernetes 组件通过默认路由不可达，我们建议你预先添加 IP 路由规则，\n这样 Kubernetes 集群就可以通过对应的适配器完成连接")]),s._v(" "),t("h3",{attrs:{id:"允许-iptables-检查桥接流量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#允许-iptables-检查桥接流量"}},[s._v("#")]),s._v(" 允许 iptables 检查桥接流量")]),s._v(" "),t("p",[s._v("确保 br_netfilter 模块被加载。这一操作可以通过运行 lsmod | grep br_netfilter 来完成。\n若要显式加载该模块，可执行 sudo modprobe br_netfilter。")]),s._v(" "),t("p",[s._v("为了让你的 Linux 节点上的 iptables 能够正确地查看桥接流量，你需要确保在你的 sysctl 配置中将 net.bridge.bridge-nf-call-iptables 设置为 1。例如：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF"),t("span",{pre:!0,attrs:{class:"token bash punctuation"}},[s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/modules-load.d/k8s.conf")]),s._v("\nbr_netfilter\nEOF")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF"),t("span",{pre:!0,attrs:{class:"token bash punctuation"}},[s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/sysctl.d/k8s.conf")]),s._v("\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nEOF")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sysctl")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--system")]),s._v("\n")])])]),t("h3",{attrs:{id:"检查所需端口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#检查所需端口"}},[s._v("#")]),s._v(" 检查所需端口")]),s._v(" "),t("p",[s._v("启用这些必要的端口后才能使 Kubernetes 的各组件相互通信。可以使用 telnet 来检查端口是否启用，例如：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("telnet "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6443")]),s._v("\n")])])]),t("p",[s._v("你使用的 Pod 网络插件 (详见后续章节) 也可能需要开启某些特定端口。由于各个 Pod 网络插件的功能都有所不同， 请参阅他们各自文档中对端口的要求。")]),s._v(" "),t("h3",{attrs:{id:"安装-runtime"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-runtime"}},[s._v("#")]),s._v(" 安装 runtime")]),s._v(" "),t("p",[s._v("安装docker等环境")]),s._v(" "),t("h3",{attrs:{id:"安装-kubeadm、kubelet-和-kubectl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-kubeadm、kubelet-和-kubectl"}},[s._v("#")]),s._v(" 安装 kubeadm、kubelet 和 kubectl")]),s._v(" "),t("p",[s._v("kubeadm：用来初始化集群的指令。")]),s._v(" "),t("p",[s._v("kubelet：在集群中的每个节点上用来启动 Pod 和容器等。")]),s._v(" "),t("p",[s._v("kubectl：用来与集群通信的命令行工具。")]),s._v(" "),t("p",[s._v("kubeadm 不能 帮你安装或者管理 kubelet 或 kubectl，所以你需要 确保它们与通过 kubeadm 安装的控制平面的版本相匹配。\n如果不这样做，则存在发生版本偏差的风险，可能会导致一些预料之外的错误和问题。\n然而，控制平面与 kubelet 间的相差一个次要版本不一致是支持的，但 kubelet 的版本不可以超过 API 服务器的版本。\n例如，1.7.0 版本的 kubelet 可以完全兼容 1.8.0 版本的 API 服务器，反之则不可以。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF"),t("span",{pre:!0,attrs:{class:"token bash punctuation"}},[s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/yum.repos.d/kubernetes.repo")]),s._v("\n[kubernetes]\nname=Kubernetes\nbaseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\\"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$basearch")]),s._v("\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg\nexclude=kubelet kubeadm kubectl\nEOF")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# GOOGLE不可达用阿里云源替换")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF"),t("span",{pre:!0,attrs:{class:"token bash punctuation"}},[s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/yum.repos.d/kubernetes.repo")]),s._v("\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-\\"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$basearch")]),s._v("\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\nEOF")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 SELinux 设置为 permissive 模式（相当于将其禁用）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" setenforce "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^SELINUX=enforcing$/SELINUX=permissive/'")]),s._v(" /etc/selinux/config\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" kubelet kubeadm kubectl "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--disableexcludes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("kubernetes\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--now")]),s._v(" kubelet\n")])])]),t("p",[s._v("请注意：")]),s._v(" "),t("p",[s._v("通过运行命令 setenforce 0 和 sed ... 将 SELinux 设置为 permissive 模式 可以有效地将其禁用。\n这是允许容器访问主机文件系统所必需的，而这些操作时为了例如 Pod 网络工作正常。")]),s._v(" "),t("p",[s._v("你必须这么做，直到 kubelet 做出对 SELinux 的支持进行升级为止。")]),s._v(" "),t("p",[s._v("如果你知道如何配置 SELinux 则可以将其保持启用状态，但可能需要设定 kubeadm 不支持的部分配置")]),s._v(" "),t("h3",{attrs:{id:"配置-cgroup-驱动程序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置-cgroup-驱动程序"}},[s._v("#")]),s._v(" 配置 cgroup 驱动程序")]),s._v(" "),t("p",[s._v('容器运行时和 kubelet 都具有名字为 "cgroup driver" 的属性，该属性对于在 Linux 机器上管理 CGroups 而言非常重要。\n警告：\n你需要确保容器运行时和 kubelet 所使用的是相同的 cgroup 驱动，否则 kubelet 进程会失败。')]),s._v(" "),t("h5",{attrs:{id:"修改容器的cgroup-driver"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改容器的cgroup-driver"}},[s._v("#")]),s._v(" 修改容器的Cgroup Driver")]),s._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 修改或创建/etc/docker/daemon.json，加入下面的内容：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"exec-opts"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"native.cgroupdriver=systemd"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启docker服务")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl daemon-reload\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl restart "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl status "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n")])])]),t("h3",{attrs:{id:"关闭swap分区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关闭swap分区"}},[s._v("#")]),s._v(" 关闭swap分区")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看swap分区")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-mh")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 临时关闭swap分区")]),s._v("\n$ swapoff "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打开swap分区 swapon -a")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 永久关闭swap分区")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/fstab\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 禁用掉swap部分")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);