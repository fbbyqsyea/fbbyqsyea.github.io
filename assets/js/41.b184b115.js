(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{348:function(t,s,n){"use strict";n.r(s);var a=n(5),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"php-register-shutdown-function"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php-register-shutdown-function"}},[t._v("#")]),t._v(" PHP register shutdown function")]),t._v(" "),s("h2",{attrs:{id:"问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),s("p",[t._v("最近业务上需要调用一个响应格式为"),s("strong",[t._v("event stream")]),t._v("的接口，需要实现下面两点功能。")]),t._v(" "),s("ul",[s("li",[t._v("请求响应格式为"),s("strong",[t._v("event stream")]),t._v("的接口，同时实时的将流式数据输出给前端。")]),t._v(" "),s("li",[t._v("请求结束后将格式化后的流式数据存储到日志中。")])]),t._v(" "),s("p",[t._v("我们使用curl的write function 回调函数来处理流式数据的输出。但是如果在event stream请求的过程中如果前端中断请求或者说发生异常，就会出现日志丢失的情况。为了实现不管是请求中断还是发生异常，我们都可以将已有的流式数据和异常数据存储到日志的功能，我们可以使用php的register_shutdown_function来注册一个shutdown回调函数。这样不管是正常请求结束还是异常的请求退出，我们都可以记录相关的已有数据。下面我们就一起来学习一下php的register_shutdown_functioon。")]),t._v(" "),s("h2",{attrs:{id:"用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用法"}},[t._v("#")]),t._v(" 用法")]),t._v(" "),s("p",[t._v("register_shutdown_function()函数在PHP中注册一个在脚本终止时执行的回调函数。这很有用,可以执行清理操作。")]),t._v(" "),s("h4",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法:")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("register_shutdown_function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" 例子:")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("register_shutdown_function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'cleanup'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("cleanup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭数据库连接,关闭打开的文件等")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'清理!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'脚本执行中...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])]),s("p",[t._v("即使脚本正常结束,或由exit(),die()或致命错误终止,关闭函数也会被调用。\n一些重要点:")]),t._v(" "),s("ul",[s("li",[t._v("可以注册多个shutdown函数。它们将以相反的注册顺序执行。")]),t._v(" "),s("li",[t._v("从shutdown函数内部注册shutdown函数将导致未定义的行为。")]),t._v(" "),s("li",[t._v("shutdown函数可以死亡,但其余的shutdown函数仍将被调用。")]),t._v(" "),s("li",[t._v("即使页面已经发送,shutdown函数也会执行,所以无法从shutdown函数内发送标头。\n总之,register_shutdown_function()允许您在PHP脚本终止时执行重要的清理代码,以避免未预期的副作用。")])]),t._v(" "),s("p",[t._v("主要用途:")]),t._v(" "),s("ul",[s("li",[t._v("关闭数据库连接")]),t._v(" "),s("li",[t._v("释放锁")]),t._v(" "),s("li",[t._v("关闭打开的文件/网络连接")]),t._v(" "),s("li",[t._v("日志记录")]),t._v(" "),s("li",[t._v("清理临时文件\n这可以确保您的脚本即使在发生意外情况下也可以正确地清理资源。")])]),t._v(" "),s("h2",{attrs:{id:"解答"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解答"}},[t._v("#")]),t._v(" 解答")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注册请求终止回调函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("register_shutdown_function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$requestParams")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$output")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 记录日志")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$requestParams")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用流式接口的参数")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$output")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 流式接口实时响应的数据")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("connection_aborted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 客户端是否已关闭与服务器的连接")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error_get_last")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误信息")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$requestParams")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);